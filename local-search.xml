<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/15/hello-world/"/>
    <url>/2022/04/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo server</code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo generate</code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo deploy</code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Plexdrive/Rclone+Google Drive搭建无限容量的Emby媒体库</title>
    <link href="/2021/04/15/%E4%BD%BF%E7%94%A8Plexdrive-Rclone-Google-Drive%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E7%9A%84Emby%E5%AA%92%E4%BD%93%E5%BA%93/"/>
    <url>/2021/04/15/%E4%BD%BF%E7%94%A8Plexdrive-Rclone-Google-Drive%E6%90%AD%E5%BB%BA%E6%97%A0%E9%99%90%E5%AE%B9%E9%87%8F%E7%9A%84Emby%E5%AA%92%E4%BD%93%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<p><strong>说明：</strong>一般我们玩<font color="#dd0000"><code>Plex</code></font>、<font color="#dd0000"><code>Emby</code></font>、<font color="#dd0000"><code>Jellyfin</code></font>这些媒体服务器的时候，都会考虑到硬盘大小的问题。如果考虑到成本的话，那就只能挂载无限网盘了，这里就建议用<code>Google Drive</code>，目前在土耳其区购买仅需50元。挂载方法的话可以用<code>Plexdrive</code>和<code>Rclone</code>。</p><p><font color="#dd0000"><code>Plexdrive</code></font>是一个可以安装<code>Gdrive</code>应用的工具，看名字像是为<code>Plex</code>量身打造，其实其它应用也可以用，该工具可以直接从<code>Gdrive</code>读取媒体文件，专门争对媒体服务器优化，貌似是利用内存缓存原理，可以加快媒体访问并减少<code>API</code>的读取次数。但是需要比较大的内存。</p><p><font color="#dd0000"><code>Rclone</code></font>是一个强大的网盘挂载工具，很久前博主就经常介绍，不过考虑到用途，之前的挂载参数肯定是需要调整下的，所以会在这里单独说下，该工具目前也有适合媒体服务器的缓存读取功能，但缓存很容易占用本地硬盘空间，所以这里博主就不用缓存功能了，主要使用的是分段读取，读取会快点，对于<code>API</code>来说，读取次数也会变的非常少。</p><h5 id="两个工具的读取区别"><a href="#两个工具的读取区别" class="headerlink" title="两个工具的读取区别"></a>两个工具的读取区别</h5><p> <font color="#dd0000"><code>Plexdrive</code></font>：只能读取和删除</p><p> <font color="#dd0000"><code>Rclone</code></font>：可以写入、读取和删除，但不能当硬盘直接写入，只能将文件移动进去</p><p>这<code>2</code>个工具都需要安装<code>fuse</code>，可以提前装下，使用命令：</p><div class="code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">Debian/Ubuntu系统</span>apt-get install fuse -y<span class="hljs-meta prompt_">#</span><span class="language-bash">CentOS系统</span>yum install fuse -y</code></pre></div><h3 id="使用Plexdrive"><a href="#使用Plexdrive" class="headerlink" title="使用Plexdrive"></a>使用Plexdrive</h3><p><strong>Github地址：</strong><a href="https://github.com/dweidenfeld/plexdrive">https://github.com/dweidenfeld/plexdrive</a></p><p><strong>1、获取谷歌API凭据</strong></p><p>获得自己的客户端<code>ID</code>和客户端密钥</p><div class="code-wrapper"><pre><code class="hljs markdown">客户端 ID540168500500-<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**<span class="hljs-emphasis">*.apps.googleusercontent.com</span></span><span class="hljs-emphasis"><span class="hljs-strong">客户端密钥</span></span><span class="hljs-emphasis"><span class="hljs-strong">6k-*</span>**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-emphasis">*</span><span class="hljs-emphasis">创建日期</span><span class="hljs-emphasis">2021年6月12日 GMT+8 下午4:21:03</span></code></pre></div><p><strong>2、运行Plexdrive</strong></p><p><code>Plexdrive</code>下载地址→<a href="https://github.com/dweidenfeld/plexdrive/releases">传送门</a>，根据自己的架构选择对应的版本。</p><div class="code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载最新的Plexdrive</span>wget https://github.com/dweidenfeld/plexdrive/releases/download/5.0.0/plexdrive-linux-amd64<span class="hljs-meta prompt_">#</span><span class="language-bash">移动并命名</span>mv plexdrive-linux-amd64 /usr/local/bin/plexdrivechmod +x /usr/local/bin/plexdrive<span class="hljs-meta prompt_">#</span><span class="language-bash">新建本地挂载目录</span>mkdir -p /home/gdrive<span class="hljs-meta prompt_">#</span><span class="language-bash">开始挂载</span>/usr/local/bin/plexdrive mount \ -c /root/.plexdrive \ -o allow_other \ -v 4 --refresh-interval=1m \ --chunk-check-threads=8 \ --chunk-load-threads=8 \ --chunk-load-ahead=4 \ --max-chunks=100 \ --drive-id=0ANsR2iUah42-Uk9PVA \ /home/gdrive</code></pre></div><p>挂载参数可以参考→<a href="https://github.com/dweidenfeld/plexdrive#usage">传送门</a>，可以根据你的需求自行调整以上参数。</p><p>挂载后会要你输入客户端<code>ID</code>和密匙，然后打开获取到的链接绑定账号后，将自己获取到的<code>code</code>复制到<code>SSH</code>客户端确定即可。</p><p>然后接下来<code>Plexdrive</code>将开始生成缓存，所以期间我们需要等几分钟。缓存完了后，你会看到<code>Gdrive</code>的文件已经同步到了本地挂载文件夹。</p><p><strong>3、开机自启</strong></p><p>这里使用<code>Systemctl</code>守护进程，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p><div class="code-wrapper"><pre><code class="hljs shell">cat &gt; /etc/systemd/system/plexdrive.service &lt;&lt;EOF[Unit]Description=PlexdriveAssertPathIsDirectory=/home/gdriveAfter=network-online.target[Service]Type=simpleExecStart=/usr/local/bin/plexdrive mount \ -c /root/.plexdrive \ -o allow_other \ -v 4 --refresh-interval=1m \ --chunk-check-threads=8 \ --chunk-load-threads=8 \ --chunk-load-ahead=4 \ --max-chunks=100 \ --drive-id=0ANsR2iUah42-Uk9PVA \ /home/gdriveExecStop=/bin/fusermount -u /home/gdriveRestart=on-abort[Install]WantedBy=default.targetEOF</code></pre></div><p>开始启动：</p><div class="code-wrapper"><pre><code class="hljs shell">systemctl start plexdrive</code></pre></div><p>设置开机自启：</p><div class="code-wrapper"><pre><code class="hljs shell">systemctl enable plexdrive</code></pre></div><p>其他命令：</p><div class="code-wrapper"><pre><code class="hljs shell">重启：systemctl restart plexdrive停止：systemctl stop plexdrive状态：systemctl status plexdrive</code></pre></div><h3 id="使用Rclone"><a href="#使用Rclone" class="headerlink" title="使用Rclone"></a>使用Rclone</h3><p><strong>1、配置Rclone</strong><br>使用和挂载<code>Google Drive</code>的方法可以参考博主以前发的教程→<a href="https://www.moerats.com/archives/481/">传送门</a>，但只参考教程安装和配置即可，挂载就看本文。</p><p><strong>2、挂载Gdrive</strong><br>挂载需要<code>3</code>个主要参数，这里很多人容易搞混，就详细的说下，比如开头的参数如下：</p><div class="code-wrapper"><pre><code class="hljs shell">/usr/bin/rclone mount DriveName:Folder LocalFolder</code></pre></div><p>参数解读：</p><div class="code-wrapper"><pre><code class="hljs awk">DriveName为Rclone的配置名称，比如你配置rclone的时候，Name填的RatsFolder为网盘里的文件夹路径，如果你要挂载整个网盘，直接填/挂载整个根目录LocalFolder为本地服务器上的挂载文件夹，如果你需要将网盘的文件夹挂载到服务器上的<span class="hljs-regexp">/Drive文件夹，那就填/</span>Drive</code></pre></div><p>博主目前针对媒体服务器测试了个比较不错的挂载参数，命令：</p><div class="code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">记得修改DriveName:Folder和LocalFolder的值</span>/usr/bin/rclone mount DriveName:Folder LocalFolder \ --umask 0000 \ --default-permissions \ --allow-non-empty \ --allow-other \ --buffer-size 32M \ --dir-cache-time 12h \ --vfs-read-chunk-size 64M \ --vfs-read-chunk-size-limit 1G</code></pre></div><p>更多参数可以查看→<a href="https://tip.rclone.org/commands/rclone_mount/#chunked-reading">地址一</a>和<a href="https://rclone.org/commands/rclone_config/">地址二</a>，如果你喜欢折腾的话，可以测试下，看还有不有更适合的参数，然后留个言。</p><p><strong>3、开机自启</strong><br>这里和<code>Plexdrive</code>一样，同样使用<code>Systemctl</code>守护进程，也只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p><div class="code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">以下是一整条命令，先修改DriveName:Folder和LocalFolder的值，再一起复制到SSH客户端运行</span>cat &gt; /etc/systemd/system/rclone.service &lt;&lt;EOF[Unit]Description=RcloneAssertPathIsDirectory=LocalFolderAfter=network-online.target[Service]Type=simpleExecStart=/usr/bin/rclone mount DriveName:Folder LocalFolder \ --umask 0000 \ --default-permissions \ --allow-non-empty \ --allow-other \ --buffer-size 32M \ --dir-cache-time 12h \ --vfs-read-chunk-size 64M \ --vfs-read-chunk-size-limit 1GExecStop=/bin/fusermount -u LocalFolderRestart=on-abortUser=root[Install]WantedBy=default.targetEOF</code></pre></div><p>开始启动：</p><div class="code-wrapper"><pre><code class="hljs shell">systemctl start rclone</code></pre></div><p>设置开机自启：</p><div class="code-wrapper"><pre><code class="hljs shell">systemctl enable rclone</code></pre></div><p>其他命令：</p><div class="code-wrapper"><pre><code class="hljs shell">重启：systemctl restart rclone停止：systemctl stop rclone状态：systemctl status rclone</code></pre></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>现在<code>Plexdrive</code>项目好像很少更新了，不过还能用；至于<code>Rclone</code>的话，更新频繁，功能也强，所以博主还是偏向于<code>Rclone</code>的，不过博主体验了下下，貌似<code>Plexdrive</code>加载什么的更快些，当然也不能肯定<code>Plexdrive</code>要快，毕竟也可能与其它因素有关，对于这<code>2</code>个工具的选择，可以都体验下，觉得哪个适合自己就用那个。</p>]]></content>
    
    
    <categories>
      
      <category>娱乐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>emby</tag>
      
      <tag>网盘挂载</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
